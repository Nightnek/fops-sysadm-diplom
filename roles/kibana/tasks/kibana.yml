- name: Ensure docke volume mapping host directories exist
  file:
    state: directory
    path: "{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') }}"
  with_items:
  - "{{ docker_kibana_directory_volumes }}"
  tags:
  - install
  - upgrade

- name: Ensure docker volume mapping host file directories exist

  file:
    state: directory
    path: "{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') | dirname }}"
  with_items:
  - "{{ docker_kibana_file_volumes }}"
  tags:
  - install
  - upgrade

- name: Copy docker volume mapping host file
  template: src="{{ docker_kibana_template_path }}{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') | basename }}.j2" dest="{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') }}" mode='0644'
  with_items:
  - "{{ docker_kibana_file_volumes }}"
  tags:
  - install
  - upgrade

- name: Remove existing kibana container

  community.docker.docker_container:
    image: kibana:8.14.3
    name: kibana
    state: absent
  tags:
  - install
  - upgrade

- name: Run docker kibana container

  become: true
  community.docker.docker_container:
    env: "{{ docker_kibana_env }}"
    interactive: true
    expose: 5601/tcp
    pull: false
    image: kibana:8.14.3
    name: kibana
    ports: 5601:5601
    restart_policy: always
    state: started
    volumes:
      /srv/docker/conf/kibana:/usr/share/kibana/data:rw
  tags:
  - install
  - upgrade
